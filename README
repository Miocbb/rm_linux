Brief:
This is a script used to remove files on linux system
to a recycle bin, the similar functionality of recycle
bin in Windows system.


Install:
(1). git clone this project into a place you like, and navigate
to the root of this project.
(2). make "rm_limux/run.py" executable by run "chmod +x run.py"
(3). create an alias for the execute path of "./run.py".


Description:
(1). A recycle bin named ".rycycle_bin" will be created under your home
path.

(2). The time when you deleted your each file will be recorded.
According to the recorded time, all the deleted files will be categoried
into deffirent folders under ".rycycle_bin". The name of folders in
".recycle_bin" is named by the year and month from the recorded time.

(3). Files thrown into the recycle_bin will be stamped by an extension
created by the recorded time, that is ".day_hour_minute_second_microsecond".

(4). A log file, ".log", will be created in each folder under ".recycle_bin",
and it will be updated with the deleted file information.


Usage:
rm alias is suggested for this script, so that original 'rm' of linux can be
overwrited.

Note: There are only two actions implimented in this program for removing files,
either delete file permanently or move file into recycle bin, no matter the target
file is just a normal file or a directory.

Command illustration
$: rm -f Files  # permanently remove files or dirs.
$: rm Files     # temporary remove files or dirs into ~/.recycle_bin.

To make this program be compatible with original linux 'rm' command at certain rare conditions,
optional arguments '-r', '-rf' and '-fr' are also acceptable, but they are just setted to be
dummy arguments, which means specifying these will not raise error but they will be ignored.
$: rm Files -rf # -rf will be ignored, this is equal to 'rm Files'.

To clean files existed inside ~/.recycle_bin, you can either use
$: rm -f Files
or just
$: rm Files
The ~/.recycle_bin/Date_Folder/.log file will be updated after your cleaning.
